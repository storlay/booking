services:
  api:
    container_name: booking-api-test
    command: ./infra/commands/test-api.sh
    env_file:
      - ../.env-test
    ports:
      - "8001:8000"
    volumes:
      - booking_static_test:/app/src/static/
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    container_name: booking-db-test
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    env_file:
      - ../.env-test
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    container_name: booking-celery-test
    env_file:
      - ../.env-test
    volumes:
      - booking_static_test:/app/src/static/
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  beat:
    container_name: booking-celery-beat-test
    env_file:
      - ../.env-test
    volumes:
      - booking_static_test:/app/src/static/
    depends_on:
      celery:
        condition: service_started
      redis:
        condition: service_healthy

  redis:
    container_name: booking-redis-test
    ports:
      - "6380:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data_test:
  booking_static_test: